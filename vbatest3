Sub CreateCleanedDataset()
    ' Declare variables
    Dim portfolioFile As String, studyMilestoneFile As String, countryMilestoneFile As String
    Dim portfolioWB As Workbook, studyMilestoneWB As Workbook, countryMilestoneWB As Workbook, outputWB As Workbook
    Dim portfolioSheet As Worksheet, studyMilestoneSheet As Worksheet, countryMilestoneSheet As Worksheet, outputSheet As Worksheet
    Dim portfolioLastRow As Long, outputLastRow As Long, studyMilestoneLastRow As Long, countryMilestoneLastRow As Long
    Dim portfolioColumns As Variant, col As Variant, colIndex As Long, findResult As Range
    Dim i As Long, j As Long, matchFound As Boolean
    Dim folderPath As String, fileName As String
    
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    ' Define the folder path where the files are located
    ' Use the current directory where this workbook is saved
    folderPath = ThisWorkbook.Path
    If Right(folderPath, 1) <> "\" Then folderPath = folderPath & "\"
    
    ' Display folder path for debugging
    MsgBox "Looking for files in: " & folderPath
    
    ' Find the files with specific keywords
    portfolioFile = FindFileWithKeyword(folderPath, "Portfolio Overview")
    studyMilestoneFile = FindFileWithKeyword(folderPath, "Study Milestone")
    countryMilestoneFile = FindFileWithKeyword(folderPath, "Country Milestone")
    
    ' Check if all files were found
    If portfolioFile = "" Or studyMilestoneFile = "" Or countryMilestoneFile = "" Then
        MsgBox "One or more required files not found in the folder:" & vbCrLf & _
               "Portfolio Overview: " & IIf(portfolioFile = "", "Not Found", "Found") & vbCrLf & _
               "Study Milestone: " & IIf(studyMilestoneFile = "", "Not Found", "Found") & vbCrLf & _
               "Country Milestone: " & IIf(countryMilestoneFile = "", "Not Found", "Found"), _
               vbExclamation, "Files Not Found"
        Exit Sub
    End If
    
    ' Open the workbooks
    On Error Resume Next
    
    ' Open each workbook and check for errors immediately after each
    Set portfolioWB = Workbooks.Open(folderPath & portfolioFile)
    If Err.Number <> 0 Then
        MsgBox "Error opening Portfolio Overview file: " & Err.Description & vbCrLf & _
               "Full path: " & folderPath & portfolioFile, vbExclamation
        Application.ScreenUpdating = True
        Application.DisplayAlerts = True
        Exit Sub
    End If
    
    Set studyMilestoneWB = Workbooks.Open(folderPath & studyMilestoneFile)
    If Err.Number <> 0 Then
        MsgBox "Error opening Study Milestone file: " & Err.Description & vbCrLf & _
               "Full path: " & folderPath & studyMilestoneFile, vbExclamation
        If Not portfolioWB Is Nothing Then portfolioWB.Close SaveChanges:=False
        Application.ScreenUpdating = True
        Application.DisplayAlerts = True
        Exit Sub
    End If
    
    Set countryMilestoneWB = Workbooks.Open(folderPath & countryMilestoneFile)
    If Err.Number <> 0 Then
        MsgBox "Error opening Country Milestone file: " & Err.Description & vbCrLf & _
               "Full path: " & folderPath & countryMilestoneFile, vbExclamation
        If Not portfolioWB Is Nothing Then portfolioWB.Close SaveChanges:=False
        If Not studyMilestoneWB Is Nothing Then studyMilestoneWB.Close SaveChanges:=False
        Application.ScreenUpdating = True
        Application.DisplayAlerts = True
        Exit Sub
    End If
    
    On Error GoTo 0
    
    ' Create a new workbook for output
    Set outputWB = Workbooks.Add
    Set outputSheet = outputWB.Sheets(1)
    outputSheet.Name = "Cleaned Data"
    
    ' Get the first sheets from each workbook
    Set portfolioSheet = portfolioWB.Sheets(1)
    Set studyMilestoneSheet = studyMilestoneWB.Sheets(1)
    Set countryMilestoneSheet = countryMilestoneWB.Sheets(1)
    
    ' Define the columns to extract from Portfolio Overview
    portfolioColumns = Array("Study", "Study status", "Therapeutic Area", "Indication", "Organizational Unit", _
                            "Country", "Global / Hub", "Biomedical Research TA", _
                            "Patients entered treatment planned as of today", "FPO plan approval date", _
                            "Study status: Active: Conduct Recruiting (FSIV actual LPFV actual)", _
                            "Pts Entered treatment Target (NCV CTMS)", "Pts Entered treatment Actual", _
                            "SIV target (NCV CTMS)", "SIV actual", "SIV plan as of today")
    
    ' Get the last row in the Portfolio Overview sheet
    portfolioLastRow = portfolioSheet.Cells(portfolioSheet.Rows.Count, 1).End(xlUp).Row
    
    ' Add headers to the output sheet
    ' First column is the current month
    outputSheet.Cells(1, 1).Value = "cur month"
    
    ' Add the Portfolio Overview columns
    colIndex = 2
    For Each col In portfolioColumns
        outputSheet.Cells(1, colIndex).Value = col
        colIndex = colIndex + 1
    Next col
    
    ' Add the joined columns from Study Milestone
    outputSheet.Cells(1, colIndex).Value = "SSO Monitoring Source"
    colIndex = colIndex + 1
    outputSheet.Cells(1, colIndex).Value = "LPFV (Actual Date) Study"
    colIndex = colIndex + 1
    
    ' Add the joined columns from Country Milestone
    outputSheet.Cells(1, colIndex).Value = "Country Sourcing"
    colIndex = colIndex + 1
    outputSheet.Cells(1, colIndex).Value = "LPFV (Actual Date) country"
    
    ' Fill in the current month for all rows
    For i = 2 To portfolioLastRow
        outputSheet.Cells(i, 1).Value = Format(Date, "yyyy-mm")
    Next i
    
    ' Copy the data from Portfolio Overview to the output sheet
    For i = 2 To portfolioLastRow
        colIndex = 2
        For Each col In portfolioColumns
            ' Find the column in the Portfolio Overview sheet
            Set findResult = portfolioSheet.Rows(1).Find(col, LookIn:=xlValues, LookAt:=xlWhole)
            If Not findResult Is Nothing Then
                ' Copy the value to the output sheet
                outputSheet.Cells(i, colIndex).Value = portfolioSheet.Cells(i, findResult.Column).Value
            Else
                ' Column not found, report the issue
                MsgBox "Column '" & col & "' not found in Portfolio Overview sheet.", vbExclamation
            End If
            colIndex = colIndex + 1
        Next col
        
        ' Process Study Milestone data (left join)
        ' Get the Study value for matching
        Dim studyValue As Variant
        studyValue = outputSheet.Cells(i, 2).Value  ' Study is the second column in the output
        
        ' Look for matching Trial Code in Study Milestone
        matchFound = False
        studyMilestoneLastRow = studyMilestoneSheet.Cells(studyMilestoneSheet.Rows.Count, 1).End(xlUp).Row
        
        ' Find the Trial Code column in Study Milestone
        Dim trialCodeColStudy As Long, ssoMonitoringColStudy As Long, lpfvColStudy As Long
        trialCodeColStudy = 0
        ssoMonitoringColStudy = 0
        lpfvColStudy = 0
        
        Set findResult = studyMilestoneSheet.Rows(1).Find("Trial Code", LookIn:=xlValues, LookAt:=xlWhole)
        If Not findResult Is Nothing Then
            trialCodeColStudy = findResult.Column
            
            ' Find the SSO Monitoring Source column
            Set findResult = studyMilestoneSheet.Rows(1).Find("SSO Monitoring Source", LookIn:=xlValues, LookAt:=xlWhole)
            If Not findResult Is Nothing Then
                ssoMonitoringColStudy = findResult.Column
            Else
                MsgBox "Column 'SSO Monitoring Source' not found in Study Milestone sheet.", vbExclamation
            End If
            
            ' Find the LPFV (Actual Date) column
            Set findResult = studyMilestoneSheet.Rows(1).Find("LPFV (Actual Date)", LookIn:=xlValues, LookAt:=xlWhole)
            If Not findResult Is Nothing Then
                lpfvColStudy = findResult.Column
            Else
                MsgBox "Column 'LPFV (Actual Date)' not found in Study Milestone sheet.", vbExclamation
            End If
            
            ' Search for the matching Trial Code
            For j = 2 To studyMilestoneLastRow
                If studyMilestoneSheet.Cells(j, trialCodeColStudy).Value = studyValue Then
                    matchFound = True
                    ' Copy SSO Monitoring Source
                    If ssoMonitoringColStudy > 0 Then
                        outputSheet.Cells(i, colIndex).Value = studyMilestoneSheet.Cells(j, ssoMonitoringColStudy).Value
                    End If
                    colIndex = colIndex + 1
                    
                    ' Copy LPFV (Actual Date)
                    If lpfvColStudy > 0 Then
                        outputSheet.Cells(i, colIndex).Value = studyMilestoneSheet.Cells(j, lpfvColStudy).Value
                    End If
                    colIndex = colIndex + 1
                    Exit For
                End If
            Next j
        Else
            MsgBox "Column 'Trial Code' not found in Study Milestone sheet.", vbExclamation
            colIndex = colIndex + 2  ' Skip the Study Milestone columns
        End If
        
        ' If no match was found, still advance the column index
        If Not matchFound And trialCodeColStudy > 0 Then
            colIndex = colIndex + 2  ' Skip the Study Milestone columns
        End If
        
        ' Process Country Milestone data (left join)
        matchFound = False
        countryMilestoneLastRow = countryMilestoneSheet.Cells(countryMilestoneSheet.Rows.Count, 1).End(xlUp).Row
        
        ' Find the Trial Code column in Country Milestone
        Dim trialCodeColCountry As Long, countrySourcingCol As Long, lpfvColCountry As Long
        trialCodeColCountry = 0
        countrySourcingCol = 0
        lpfvColCountry = 0
        
        Set findResult = countryMilestoneSheet.Rows(1).Find("Trial Code", LookIn:=xlValues, LookAt:=xlWhole)
        If Not findResult Is Nothing Then
            trialCodeColCountry = findResult.Column
            
            ' Find the Country Sourcing column
            Set findResult = countryMilestoneSheet.Rows(1).Find("Country Sourcing", LookIn:=xlValues, LookAt:=xlWhole)
            If Not findResult Is Nothing Then
                countrySourcingCol = findResult.Column
            Else
                MsgBox "Column 'Country Sourcing' not found in Country Milestone sheet.", vbExclamation
            End If
            
            ' Find the LPFV (Actual Date) column
            Set findResult = countryMilestoneSheet.Rows(1).Find("LPFV (Actual Date)", LookIn:=xlValues, LookAt:=xlWhole)
            If Not findResult Is Nothing Then
                lpfvColCountry = findResult.Column
            Else
                MsgBox "Column 'LPFV (Actual Date)' not found in Country Milestone sheet.", vbExclamation
            End If
            
            ' Search for the matching Trial Code
            For j = 2 To countryMilestoneLastRow
                If countryMilestoneSheet.Cells(j, trialCodeColCountry).Value = studyValue Then
                    matchFound = True
                    ' Copy Country Sourcing
                    If countrySourcingCol > 0 Then
                        outputSheet.Cells(i, colIndex).Value = countryMilestoneSheet.Cells(j, countrySourcingCol).Value
                    End If
                    colIndex = colIndex + 1
                    
                    ' Copy LPFV (Actual Date)
                    If lpfvColCountry > 0 Then
                        outputSheet.Cells(i, colIndex).Value = countryMilestoneSheet.Cells(j, lpfvColCountry).Value
                    End If
                    Exit For
                End If
            Next j
        Else
            MsgBox "Column 'Trial Code' not found in Country Milestone sheet.", vbExclamation
        End If
    Next i
    
    ' Auto-fit columns for better readability
    outputSheet.Columns("A:Z").AutoFit
    
    ' Save the output workbook
    On Error Resume Next
    outputWB.SaveAs folderPath & "Cleaned dataset for SIV&RR scorecard.xlsx"
    If Err.Number <> 0 Then
        MsgBox "Error saving the output file. Please check if the file is already open or if you have sufficient permissions.", vbExclamation
        On Error GoTo 0
        Exit Sub
    End If
    On Error GoTo 0
    
    ' Close the workbooks
    portfolioWB.Close SaveChanges:=False
    studyMilestoneWB.Close SaveChanges:=False
    countryMilestoneWB.Close SaveChanges:=False
    
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    
    ' Show success message
    MsgBox "Process completed. Output file created: " & folderPath & "Cleaned dataset for SIV&RR scorecard.xlsx"
End Sub

Function FindFileWithKeyword(folderPath As String, keyword As String) As String
    ' Find a file in the specified folder that contains the given keyword
    Dim fileName As String
    
    On Error Resume Next
    
    ' Get the first file in the folder
    fileName = Dir(folderPath & "*.xlsx")
    
    ' Check if there was an error getting the files
    If Err.Number <> 0 Then
        MsgBox "Error accessing directory: " & Err.Description & vbCrLf & _
               "Path: " & folderPath, vbExclamation
        FindFileWithKeyword = ""
        Exit Function
    End If
    On Error GoTo 0
    
    ' Loop through all Excel files in the folder
    Do While fileName <> ""
        ' Debug - show the files being checked
        Debug.Print "Checking file: " & fileName
        
        ' Check if the filename contains the keyword
        If InStr(1, fileName, keyword, vbTextCompare) > 0 Then
            FindFileWithKeyword = fileName
            Exit Function
        End If
        
        ' Get the next file
        fileName = Dir()
    Loop
    
    ' If no file was found, return an empty string
    FindFileWithKeyword = ""
End Function
