Sub ProcessExcelFile()
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim filePath As Variant
    Dim lastRow As Long
    Dim lastCol As Long
    Dim i As Long, j As Long
    Dim currentDate As String
    Dim columnsToKeep As Variant
    Dim tempCol As Long
    
    ' 1. File selection dialog
    filePath = Application.GetOpenFilename( _
        FileFilter:="Excel Files (*.xls; *.xlsx; *.xlsm), *.xls; *.xlsx; *.xlsm", _
        Title:="Please select file", _
        MultiSelect:=False)
    
    ' Check if user cancelled
    If filePath = False Then
        MsgBox "No file selected. Operation cancelled.", vbInformation
        Exit Sub
    End If
    
    ' Open the selected workbook
    Set wb = Workbooks.Open(filePath)
    Set ws = wb.Worksheets(1) ' Assuming data is in the first sheet
    
    ' Turn off screen updating for better performance
    Application.ScreenUpdating = False
    
    ' 2. FIRST: Remove rows containing specific text (before adding date column)
    Dim textsToRemove As Variant
    textsToRemove = Array("Selections:", "Title:", "Subtitle:", "Totals")
    
    ' Find initial last row
    lastRow = ws.UsedRange.Rows.Count
    
    ' Loop through rows from bottom to top to avoid skipping rows
    For i = lastRow To 1 Step -1
        For j = 1 To ws.Cells(i, ws.Columns.Count).End(xlToLeft).Column
            For Each txt In textsToRemove
                If InStr(1, ws.Cells(i, j).Value, txt, vbTextCompare) > 0 Then
                    ws.Rows(i).Delete
                    Exit For
                End If
            Next txt
        Next j
    Next i
    
    ' 3. NOW add the date column after cleaning
    currentDate = Format(Date, "yyyy-mm-dd")
    
    ' Insert new column at position A
    ws.Columns("A:A").Insert Shift:=xlToRight
    ws.Range("A1").Value = "as_of_date"
    
    ' Recalculate last row after deletions
    lastRow = ws.Cells(ws.Rows.Count, "B").End(xlUp).Row
    
    ' Fill the date column
    If lastRow > 1 Then
        ws.Range("A2:A" & lastRow).Value = currentDate
    End If
    
    ' 4. Select and keep only specified columns
    columnsToKeep = Array("as_of_date", "Study Code", "Country Status", "Hub", _
                         "Country", "Global SSO Priority", "Global SSO Priority Type", _
                         "Country YTD New Pts")
    
    ' Find column positions
    Dim colPositions() As Long
    ReDim colPositions(UBound(columnsToKeep))
    
    lastCol = ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column
    
    For i = 0 To UBound(columnsToKeep)
        colPositions(i) = 0
        For j = 1 To lastCol
            If Trim(ws.Cells(1, j).Value) = columnsToKeep(i) Then
                colPositions(i) = j
                Exit For
            End If
        Next j
    Next i
    
    ' Create a new sheet to store filtered columns
    Dim newWs As Worksheet
    Set newWs = wb.Worksheets.Add(After:=ws)
    newWs.Name = "Processed_Data"
    
    ' Copy selected columns to new sheet
    tempCol = 1
    For i = 0 To UBound(columnsToKeep)
        If colPositions(i) > 0 Then
            ' Get the actual last row with data for this column
            Dim colLastRow As Long
            colLastRow = ws.Cells(ws.Rows.Count, colPositions(i)).End(xlUp).Row
            
            ' Copy the entire column range with data
            ws.Range(ws.Cells(1, colPositions(i)), ws.Cells(colLastRow, colPositions(i))).Copy
            newWs.Cells(1, tempCol).PasteSpecial xlPasteAll
            tempCol = tempCol + 1
        Else
            ' If column not found, add empty column with header
            newWs.Cells(1, tempCol).Value = columnsToKeep(i)
            tempCol = tempCol + 1
        End If
    Next i
    
    ' Clear clipboard
    Application.CutCopyMode = False
    
    ' Delete original sheet (optional - comment out if you want to keep it)
    Application.DisplayAlerts = False
    ws.Delete
    Application.DisplayAlerts = True
    
    ' Auto-fit columns
    newWs.Columns.AutoFit
    
    ' Turn screen updating back on
    Application.ScreenUpdating = True
    
    ' Display summary
    Dim dataRows As Long
    dataRows = newWs.Cells(newWs.Rows.Count, "A").End(xlUp).Row - 1
    MsgBox "File processing completed successfully!" & vbCrLf & _
           "Total data rows: " & dataRows, vbInformation
    
End Sub
