Sub CleanAndExtractData()

  Dim wb As Workbook, wbNew As Workbook
  Dim ws As Worksheet, wsNew As Worksheet
  Dim fd As FileDialog
  Dim strFilePath As String
  Dim LastRow As Long, LastCol As Long
  Dim i As Long, j As Long
  Dim strSearchTerm As String
  Dim arrColsToKeep() As Variant
  Dim colIndex As Long
  Dim blnFound As Boolean
  Dim strNewFileName As String
  Dim strDate As String
  Dim varValue As Variant

  ' **1. Select the file by user**
  Set fd = Application.FileDialog(msoFileDialogFilePicker)
  With fd
    .Title = "Please select file"
    .AllowMultiSelect = False
    .Filters.Clear
    .Filters.Add "Excel Files", "*.xlsx; *.xlsm; *.xls; *.xlsb"
    If .Show = -1 Then
      strFilePath = .SelectedItems(1)
    Else
      MsgBox "No file selected.  Exiting.", vbExclamation
      Exit Sub
    End If
  End With
  Set fd = Nothing

  ' Open the selected workbook
  Set wb = Workbooks.Open(strFilePath)
  Set ws = wb.Sheets(1) ' Assuming data is on the first sheet.  Adjust if needed!

  ' **2. Remove rows containing {"Selections:", "Title:", "Subtitle:"}**
  Application.ScreenUpdating = False ' Speed up the process
  LastRow = ws.Cells(Rows.Count, 1).End(xlUp).Row ' Find last row in column A

  For i = LastRow To 1 Step -1 ' Loop backwards to avoid skipping rows after deletion

    strSearchTerm = LCase(Join(Array(ws.Cells(i, 1).Value, ws.Cells(i, 2).Value, ws.Cells(i, 3).Value))) 'Concatenate first 3 columns to check
    If InStr(strSearchTerm, "selections:") > 0 Or _
       InStr(strSearchTerm, "title:") > 0 Or _
       InStr(strSearchTerm, "subtitle:") > 0 Then
      ws.Rows(i).Delete
    End If
  Next i

  ' **3. Select columns including "Study Code", "Country Status", "Hub", "Country", "Global SSO Priority", "Global SSO Priority Type", "Country YTD New Pts"**
  'Define array of columns to keep
  arrColsToKeep = Array("Study Code", "Country Status", "Hub", "Country", "Global SSO Priority", "Global SSO Priority Type", "Country YTD New Pts")

  'Find the last column
  LastCol = ws.Cells(1, Columns.Count).End(xlToLeft).Column

  ' Create a new workbook
  Set wbNew = Workbooks.Add
  Set wsNew = wbNew.Sheets(1)

  'Copy the header row
  For j = 1 To LastCol
    For Each varValue In arrColsToKeep
        If ws.Cells(1, j).Value = varValue Then
            wsNew.Cells(1, WorksheetFunction.Match(varValue, arrColsToKeep, 0)).Value = ws.Cells(1, j).Value
            Exit For
        End If
    Next varValue
  Next j

  'Copy data to new workbook
  LastRow = ws.Cells(Rows.Count, 1).End(xlUp).Row
  For i = 2 To LastRow
    For j = 1 To LastCol
        For Each varValue In arrColsToKeep
            If ws.Cells(1, j).Value = varValue Then
                wsNew.Cells(i, WorksheetFunction.Match(varValue, arrColsToKeep, 0)).Value = ws.Cells(i, j).Value
            End If
        Next varValue
    Next j
  Next i

  ' **4. Remove the value containing "Totals" under column "Study Code"**
    LastRow = wsNew.Cells(Rows.Count, 1).End(xlUp).Row
    For i = LastRow To 2 Step -1
        If wsNew.Cells(i, 1).Value Like "*Totals*" Then
            wsNew.Rows(i).Delete
        End If
    Next i

  ' **5. Create current date column "as_ofdate"**
  strDate = Format(Date, "yyyy-mm-dd")
  LastRow = wsNew.Cells(Rows.Count, 1).End(xlUp).Row
  LastCol = wsNew.Cells(1, Columns.Count).End(xlToLeft).Column + 1

  wsNew.Cells(1, LastCol).Value = "as_ofdate"

  For i = 2 To LastRow
    wsNew.Cells(i, LastCol).Value = strDate
  Next i

  ' **6. Save the new file with name "Dataset for calculating YTD new pts" & Format(Now, "yyyymmdd_hhmmss")**
  strNewFileName = "Dataset for calculating YTD new pts_" & Format(Now, "yyyymmdd_hhmmss") & ".xlsx"
  wbNew.SaveAs Filename:=ThisWorkbook.Path & "\" & strNewFileName, FileFormat:=xlOpenXMLWorkbook

  ' Close the original workbook without saving (optional)
  wb.Close SaveChanges:=False

  Application.ScreenUpdating = True ' Re-enable screen updating
  MsgBox "Data cleaning and extraction complete!  New file saved as: " & ThisWorkbook.Path & "\" & strNewFileName, vbInformation

End Sub
