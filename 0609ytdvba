Sub ProcessExcelFile()
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim filePath As Variant
    Dim lastRow As Long
    Dim lastCol As Long
    Dim i As Long, j As Long
    Dim currentDate As String
    Dim columnsToKeep As Variant
    Dim tempCol As Long
    
    ' Error handling
    On Error GoTo ErrorHandler
    
    ' 1. File selection dialog with instruction
    filePath = Application.GetOpenFilename( _
        FileFilter:="Excel Files (*.xls; *.xlsx; *.xlsm), *.xls; *.xlsx; *.xlsm", _
        Title:="Please select file", _
        MultiSelect:=False)
    
    ' Check if user cancelled
    If filePath = False Then
        MsgBox "No file selected. Operation cancelled.", vbInformation
        Exit Sub
    End If
    
    ' Open the selected workbook
    Set wb = Workbooks.Open(filePath)
    Set ws = wb.Worksheets(1) ' Assuming data is in the first sheet
    
    ' Turn off screen updating for better performance
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    ' 2. Remove rows containing specific text in column A
    Dim textsToRemove As Variant
    Dim txt As Variant
    textsToRemove = Array("Selections:", "Title:", "Subtitle:")
    
    ' Find last row with data
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    
    ' Loop through rows from bottom to top checking only column A
    For i = lastRow To 1 Step -1
        For Each txt In textsToRemove
            If InStr(1, ws.Cells(i, 1).Value, txt, vbTextCompare) > 0 Then
                ws.Rows(i).Delete
                Exit For
            End If
        Next txt
    Next i
    
    ' 3. Select and keep only specified columns
    columnsToKeep = Array("Study Code", "Country Status", "Hub", _
                         "Country", "Global SSO Priority", "Global SSO Priority Type", _
                         "Country YTD New Pts")
    
    ' Find column positions
    Dim colPositions() As Long
    ReDim colPositions(UBound(columnsToKeep))
    
    lastCol = ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column
    
    For i = 0 To UBound(columnsToKeep)
        colPositions(i) = 0
        For j = 1 To lastCol
            If Trim(ws.Cells(1, j).Value) = columnsToKeep(i) Then
                colPositions(i) = j
                Exit For
            End If
        Next j
    Next i
    
    ' Create a new sheet to store filtered columns
    Dim newWs As Worksheet
    Set newWs = wb.Worksheets.Add(After:=ws)
    newWs.Name = "Cleaned_Data"
    
    ' Copy selected columns to new sheet
    tempCol = 1
    For i = 0 To UBound(columnsToKeep)
        If colPositions(i) > 0 Then
            ' Copy the entire column including data
            ws.Columns(colPositions(i)).Copy
            newWs.Columns(tempCol).PasteSpecial xlPasteAll
            tempCol = tempCol + 1
        Else
            ' If column not found, add empty column with header
            newWs.Cells(1, tempCol).Value = columnsToKeep(i)
            MsgBox "Warning: Column '" & columnsToKeep(i) & "' not found in source data.", vbExclamation
            tempCol = tempCol + 1
        End If
    Next i
    
    ' Clear clipboard
    Application.CutCopyMode = False
    
    ' Delete original sheet
    ws.Delete
    
    ' Now work with the new sheet
    Set ws = newWs
    
    ' 4. Remove rows where "Study Code" contains "Totals"
    ' Find the Study Code column position in the new sheet
    Dim studyCodeCol As Long
    studyCodeCol = 0
    
    For j = 1 To ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column
        If Trim(ws.Cells(1, j).Value) = "Study Code" Then
            studyCodeCol = j
            Exit For
        End If
    Next j
    
    If studyCodeCol > 0 Then
        ' Find last row
        lastRow = ws.Cells(ws.Rows.Count, studyCodeCol).End(xlUp).Row
        
        ' Loop from bottom to top and remove rows containing "Totals" in Study Code column
        For i = lastRow To 2 Step -1 ' Start from 2 to preserve header
            If InStr(1, ws.Cells(i, studyCodeCol).Value, "Totals", vbTextCompare) > 0 Then
                ws.Rows(i).Delete
            End If
        Next i
    End If
    
    ' 5. Create current date column as the first column
    currentDate = Format(Date, "yyyy-mm-dd")
    
    ' Insert new column at position A
    ws.Columns("A:A").Insert Shift:=xlToRight
    ws.Range("A1").Value = "as_of_date"
    
    ' Find last row with data after all deletions
    lastRow = ws.Cells(ws.Rows.Count, "B").End(xlUp).Row
    
    ' Fill the date column with the current date
    ws.Range("A2:A" & lastRow).Value = currentDate
    
    ' Auto-fit columns
    ws.Columns.AutoFit
    
    ' 6. Save the workbook with the specified name
    Dim savePath As String
    Dim fileName As String
    
    ' Create filename with timestamp
    fileName = "Dataset for calculating YTD new pts " & Format(Now, "yyyymmdd_hhmmss") & ".xlsx"
    
    ' Get the directory of the original file
    savePath = Left(filePath, InStrRev(filePath, "\"))
    
    ' Save the workbook
    wb.SaveAs Filename:=savePath & fileName, FileFormat:=xlOpenXMLWorkbook
    
    ' Turn settings back on
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    
    ' Success message
    MsgBox "File processing completed successfully!" & vbCrLf & _
           "Date used: " & currentDate & vbCrLf & _
           "Rows processed: " & (lastRow - 1) & vbCrLf & _
           "File saved as: " & fileName, vbInformation
    
    Exit Sub

ErrorHandler:
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    MsgBox "An error occurred: " & Err.Description, vbCritical
    
End Sub
