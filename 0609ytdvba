Sub CleanDataAndExport()
    Dim sourceWorkbook As Workbook
    Dim sourceSheet As Worksheet
    Dim newWorkbook As Workbook
    Dim newSheet As Worksheet
    Dim filePath As Variant
    Dim lastRow As Long, lastCol As Long
    Dim i As Long, j As Long
    Dim currentDate As String
    Dim newFileName As String
    Dim colsToKeep As Variant
    Dim studyCodeCol As Long
    Dim foundCol As Boolean
    
    ' Step 1: File selection dialog
    filePath = Application.GetOpenFilename( _
        FileFilter:="Excel Files (*.xls; *.xlsx; *.xlsm), *.xls; *.xlsx; *.xlsm", _
        Title:="Please select file")
    
    ' Check if user cancelled
    If filePath = False Then
        MsgBox "No file selected. Operation cancelled.", vbInformation
        Exit Sub
    End If
    
    ' Open the selected workbook
    Set sourceWorkbook = Workbooks.Open(filePath)
    Set sourceSheet = sourceWorkbook.Sheets(1) ' Assuming data is in first sheet
    
    ' Find last row and column with data
    lastRow = sourceSheet.Cells(sourceSheet.Rows.Count, 1).End(xlUp).Row
    lastCol = sourceSheet.Cells(1, sourceSheet.Columns.Count).End(xlToLeft).Column
    
    ' Step 2: Create current date
    currentDate = Format(Date, "yyyy-mm-dd")
    
    ' Insert new column at the beginning
    sourceSheet.Columns(1).Insert
    sourceSheet.Cells(1, 1).Value = "as_of_date"
    
    ' Fill the date column
    For i = 2 To lastRow
        sourceSheet.Cells(i, 1).Value = currentDate
    Next i
    
    ' Update lastCol after inserting new column
    lastCol = lastCol + 1
    
    ' Step 3: Remove rows containing specific text
    Dim textsToRemove As Variant
    textsToRemove = Array("Selections:", "Title:", "Subtitle:")
    
    For i = lastRow To 1 Step -1
        For j = 1 To lastCol
            For Each txt In textsToRemove
                If InStr(1, sourceSheet.Cells(i, j).Value, txt, vbTextCompare) > 0 Then
                    sourceSheet.Rows(i).Delete
                    Exit For
                End If
            Next txt
        Next j
    Next i
    
    ' Update lastRow after deletions
    lastRow = sourceSheet.Cells(sourceSheet.Rows.Count, 1).End(xlUp).Row
    
    ' Step 4: Find Study Code column and remove rows with "Totals"
    studyCodeCol = 0
    For j = 1 To lastCol
        If sourceSheet.Cells(1, j).Value = "Study Code" Then
            studyCodeCol = j
            Exit For
        End If
    Next j
    
    If studyCodeCol > 0 Then
        For i = lastRow To 2 Step -1 ' Start from 2 to skip header
            If InStr(1, sourceSheet.Cells(i, studyCodeCol).Value, "Totals", vbTextCompare) > 0 Then
                sourceSheet.Rows(i).Delete
            End If
        Next i
    End If
    
    ' Update lastRow after deletions
    lastRow = sourceSheet.Cells(sourceSheet.Rows.Count, 1).End(xlUp).Row
    
    ' Step 5: Select specific columns
    colsToKeep = Array("as_of_date", "Study Code", "Country Status", "Hub", "Country", _
                       "Global SSO Priority", "Global SSO Priority Type", "Country YTD New Pts")
    
    ' Create new workbook for cleaned data
    Set newWorkbook = Workbooks.Add
    Set newSheet = newWorkbook.Sheets(1)
    
    ' Copy selected columns to new workbook
    Dim newColIndex As Long
    newColIndex = 1
    
    For Each colName In colsToKeep
        foundCol = False
        For j = 1 To lastCol
            If sourceSheet.Cells(1, j).Value = colName Then
                ' Copy entire column
                sourceSheet.Columns(j).Copy
                newSheet.Columns(newColIndex).PasteSpecial xlPasteAll
                Application.CutCopyMode = False
                newColIndex = newColIndex + 1
                foundCol = True
                Exit For
            End If
        Next j
        
        If Not foundCol Then
            MsgBox "Column '" & colName & "' not found in the source file.", vbWarning
        End If
    Next colName
    
    ' Remove empty rows in new sheet
    Dim newLastRow As Long
    newLastRow = newSheet.Cells(newSheet.Rows.Count, 1).End(xlUp).Row
    
    ' Auto-fit columns
    newSheet.Columns.AutoFit
    
    ' Step 6: Save the new file
    newFileName = "Dataset for calculating YTD new pts_" & Format(Now, "yyyymmdd_hhmmss") & ".xlsx"
    
    ' Save in the same directory as the source file
    Dim savePath As String
    savePath = Left(filePath, InStrRev(filePath, "\")) & newFileName
    
    newWorkbook.SaveAs Filename:=savePath, FileFormat:=xlOpenXMLWorkbook
    
    ' Close workbooks
    sourceWorkbook.Close SaveChanges:=False
    newWorkbook.Close SaveChanges:=False
    
    MsgBox "Data cleaning completed!" & vbCrLf & _
           "File saved as: " & newFileName, vbInformation
    
End Sub
